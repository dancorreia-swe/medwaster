/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthQuestionsIndexRouteImport } from './routes/_auth/questions/index'
import { Route as AuthWikiTopicsRouteImport } from './routes/_auth/wiki/topics'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthQuestionsIndexRoute = AuthQuestionsIndexRouteImport.update({
  id: '/questions/',
  path: '/questions/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthWikiTopicsRoute = AuthWikiTopicsRouteImport.update({
  id: '/wiki/topics',
  path: '/wiki/topics',
  getParentRoute: () => AuthRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/wiki/topics': typeof AuthWikiTopicsRoute
  '/questions': typeof AuthQuestionsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/wiki/topics': typeof AuthWikiTopicsRoute
  '/questions': typeof AuthQuestionsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/dashboard': typeof DashboardRoute
  '/login': typeof LoginRoute
  '/_auth/wiki/topics': typeof AuthWikiTopicsRoute
  '/_auth/questions/': typeof AuthQuestionsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/dashboard' | '/login' | '/wiki/topics' | '/questions'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/dashboard' | '/login' | '/wiki/topics' | '/questions'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/dashboard'
    | '/login'
    | '/_auth/wiki/topics'
    | '/_auth/questions/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  DashboardRoute: typeof DashboardRoute
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/questions/': {
      id: '/_auth/questions/'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof AuthQuestionsIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/wiki/topics': {
      id: '/_auth/wiki/topics'
      path: '/wiki/topics'
      fullPath: '/wiki/topics'
      preLoaderRoute: typeof AuthWikiTopicsRouteImport
      parentRoute: typeof AuthRoute
    }
  }
}

interface AuthRouteChildren {
  AuthWikiTopicsRoute: typeof AuthWikiTopicsRoute
  AuthQuestionsIndexRoute: typeof AuthQuestionsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthWikiTopicsRoute: AuthWikiTopicsRoute,
  AuthQuestionsIndexRoute: AuthQuestionsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  DashboardRoute: DashboardRoute,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
