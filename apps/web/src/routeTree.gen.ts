/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ForgotPasswordRouteImport } from './routes/forgot-password'
import { Route as AccessDeniedRouteImport } from './routes/access-denied'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as AuthIndexRouteImport } from './routes/_auth/index'
import { Route as AuthAdminRouteImport } from './routes/_auth/admin'
import { Route as AuthQuestionsIndexRouteImport } from './routes/_auth/questions/index'
import { Route as AuthWikiTopicsRouteImport } from './routes/_auth/wiki/topics'
import { Route as AuthWikiArticleIdRouteImport } from './routes/_auth/wiki/$articleId'
import { Route as AuthAdminWikiRouteImport } from './routes/_auth/admin/wiki'
import { Route as AuthAdminWikiIndexRouteImport } from './routes/_auth/admin/wiki/index'
import { Route as AuthAdminWikiArticlesIndexRouteImport } from './routes/_auth/admin/wiki/articles/index'

const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ForgotPasswordRoute = ForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => rootRouteImport,
} as any)
const AccessDeniedRoute = AccessDeniedRouteImport.update({
  id: '/access-denied',
  path: '/access-denied',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthIndexRoute = AuthIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAdminRoute = AuthAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthQuestionsIndexRoute = AuthQuestionsIndexRouteImport.update({
  id: '/questions/',
  path: '/questions/',
  getParentRoute: () => AuthRoute,
} as any)
const AuthWikiTopicsRoute = AuthWikiTopicsRouteImport.update({
  id: '/wiki/topics',
  path: '/wiki/topics',
  getParentRoute: () => AuthRoute,
} as any)
const AuthWikiArticleIdRoute = AuthWikiArticleIdRouteImport.update({
  id: '/wiki/$articleId',
  path: '/wiki/$articleId',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAdminWikiRoute = AuthAdminWikiRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => AuthAdminRoute,
} as any)
const AuthAdminWikiIndexRoute = AuthAdminWikiIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthAdminWikiRoute,
} as any)
const AuthAdminWikiArticlesIndexRoute =
  AuthAdminWikiArticlesIndexRouteImport.update({
    id: '/articles/',
    path: '/articles/',
    getParentRoute: () => AuthAdminWikiRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/access-denied': typeof AccessDeniedRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/admin': typeof AuthAdminRouteWithChildren
  '/': typeof AuthIndexRoute
  '/admin/wiki': typeof AuthAdminWikiRouteWithChildren
  '/wiki/$articleId': typeof AuthWikiArticleIdRoute
  '/wiki/topics': typeof AuthWikiTopicsRoute
  '/questions': typeof AuthQuestionsIndexRoute
  '/admin/wiki/': typeof AuthAdminWikiIndexRoute
  '/admin/wiki/articles': typeof AuthAdminWikiArticlesIndexRoute
}
export interface FileRoutesByTo {
  '/access-denied': typeof AccessDeniedRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/admin': typeof AuthAdminRouteWithChildren
  '/': typeof AuthIndexRoute
  '/wiki/$articleId': typeof AuthWikiArticleIdRoute
  '/wiki/topics': typeof AuthWikiTopicsRoute
  '/questions': typeof AuthQuestionsIndexRoute
  '/admin/wiki': typeof AuthAdminWikiIndexRoute
  '/admin/wiki/articles': typeof AuthAdminWikiArticlesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/access-denied': typeof AccessDeniedRoute
  '/forgot-password': typeof ForgotPasswordRoute
  '/login': typeof LoginRoute
  '/reset-password': typeof ResetPasswordRoute
  '/_auth/admin': typeof AuthAdminRouteWithChildren
  '/_auth/': typeof AuthIndexRoute
  '/_auth/admin/wiki': typeof AuthAdminWikiRouteWithChildren
  '/_auth/wiki/$articleId': typeof AuthWikiArticleIdRoute
  '/_auth/wiki/topics': typeof AuthWikiTopicsRoute
  '/_auth/questions/': typeof AuthQuestionsIndexRoute
  '/_auth/admin/wiki/': typeof AuthAdminWikiIndexRoute
  '/_auth/admin/wiki/articles/': typeof AuthAdminWikiArticlesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/access-denied'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/admin'
    | '/'
    | '/admin/wiki'
    | '/wiki/$articleId'
    | '/wiki/topics'
    | '/questions'
    | '/admin/wiki/'
    | '/admin/wiki/articles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/access-denied'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/admin'
    | '/'
    | '/wiki/$articleId'
    | '/wiki/topics'
    | '/questions'
    | '/admin/wiki'
    | '/admin/wiki/articles'
  id:
    | '__root__'
    | '/_auth'
    | '/access-denied'
    | '/forgot-password'
    | '/login'
    | '/reset-password'
    | '/_auth/admin'
    | '/_auth/'
    | '/_auth/admin/wiki'
    | '/_auth/wiki/$articleId'
    | '/_auth/wiki/topics'
    | '/_auth/questions/'
    | '/_auth/admin/wiki/'
    | '/_auth/admin/wiki/articles/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  AccessDeniedRoute: typeof AccessDeniedRoute
  ForgotPasswordRoute: typeof ForgotPasswordRoute
  LoginRoute: typeof LoginRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/forgot-password': {
      id: '/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof ForgotPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/access-denied': {
      id: '/access-denied'
      path: '/access-denied'
      fullPath: '/access-denied'
      preLoaderRoute: typeof AccessDeniedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/questions/': {
      id: '/_auth/questions/'
      path: '/questions'
      fullPath: '/questions'
      preLoaderRoute: typeof AuthQuestionsIndexRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/wiki/topics': {
      id: '/_auth/wiki/topics'
      path: '/wiki/topics'
      fullPath: '/wiki/topics'
      preLoaderRoute: typeof AuthWikiTopicsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/wiki/$articleId': {
      id: '/_auth/wiki/$articleId'
      path: '/wiki/$articleId'
      fullPath: '/wiki/$articleId'
      preLoaderRoute: typeof AuthWikiArticleIdRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/admin/wiki': {
      id: '/_auth/admin/wiki'
      path: '/wiki'
      fullPath: '/admin/wiki'
      preLoaderRoute: typeof AuthAdminWikiRouteImport
      parentRoute: typeof AuthAdminRoute
    }
    '/_auth/admin/wiki/': {
      id: '/_auth/admin/wiki/'
      path: '/'
      fullPath: '/admin/wiki/'
      preLoaderRoute: typeof AuthAdminWikiIndexRouteImport
      parentRoute: typeof AuthAdminWikiRoute
    }
    '/_auth/admin/wiki/articles/': {
      id: '/_auth/admin/wiki/articles/'
      path: '/articles'
      fullPath: '/admin/wiki/articles'
      preLoaderRoute: typeof AuthAdminWikiArticlesIndexRouteImport
      parentRoute: typeof AuthAdminWikiRoute
    }
  }
}

interface AuthAdminWikiRouteChildren {
  AuthAdminWikiIndexRoute: typeof AuthAdminWikiIndexRoute
  AuthAdminWikiArticlesIndexRoute: typeof AuthAdminWikiArticlesIndexRoute
}

const AuthAdminWikiRouteChildren: AuthAdminWikiRouteChildren = {
  AuthAdminWikiIndexRoute: AuthAdminWikiIndexRoute,
  AuthAdminWikiArticlesIndexRoute: AuthAdminWikiArticlesIndexRoute,
}

const AuthAdminWikiRouteWithChildren = AuthAdminWikiRoute._addFileChildren(
  AuthAdminWikiRouteChildren,
)

interface AuthAdminRouteChildren {
  AuthAdminWikiRoute: typeof AuthAdminWikiRouteWithChildren
}

const AuthAdminRouteChildren: AuthAdminRouteChildren = {
  AuthAdminWikiRoute: AuthAdminWikiRouteWithChildren,
}

const AuthAdminRouteWithChildren = AuthAdminRoute._addFileChildren(
  AuthAdminRouteChildren,
)

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRouteWithChildren
  AuthIndexRoute: typeof AuthIndexRoute
  AuthWikiArticleIdRoute: typeof AuthWikiArticleIdRoute
  AuthWikiTopicsRoute: typeof AuthWikiTopicsRoute
  AuthQuestionsIndexRoute: typeof AuthQuestionsIndexRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRouteWithChildren,
  AuthIndexRoute: AuthIndexRoute,
  AuthWikiArticleIdRoute: AuthWikiArticleIdRoute,
  AuthWikiTopicsRoute: AuthWikiTopicsRoute,
  AuthQuestionsIndexRoute: AuthQuestionsIndexRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  AccessDeniedRoute: AccessDeniedRoute,
  ForgotPasswordRoute: ForgotPasswordRoute,
  LoginRoute: LoginRoute,
  ResetPasswordRoute: ResetPasswordRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
